[buildout]
extends =
  versions.cfg
  test.cfg

show-picked-versions = true
allow-picked-versions = false

parts =
  environment
  GDAL
  instance
  test
  test-coverage
  test-coverage-report
  jenkins-test
  jenkins-test-coverage
  wsgiconf
  wsgiapp
  uwsgiapp

[wsgiconf]
recipe = collective.recipe.template
input = zope.wsgi.in
output = zope.wsgi

[wsgiapp]
recipe = zc.recipe.egg
eggs =
  ${instance:eggs}
  repoze.who
  repoze.tm2
  repoze.retry
  Paste
  PasteScript
  PasteDeploy

[uwsgiapp]
recipe = unweb.recipe.uwsgi
eggs = ${wsgiapp:eggs}

[environment]
recipe = collective.recipe.environment

##############################################################################
# GDAL bindings
##############################################################################
[GDAL]
recipe = zc.recipe.egg:custom
egg = GDAL
include-dirs = /usr/include/gdal

##############################################################################
# Zope Instance
##############################################################################
# TODO: maybe re-use base.cfg from base image?
#       e.g.: in zope: rename base.cfg to zope.cfg
#             in plone: renabe base.cfg no plone.cfg
#                       and override whatever we want
# TODO: test runner needs to go into this file so that we can test a build to release
# TODO: add development.cfg, in order to do patching
# TODO: consider adding version checker recipe
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 0.0.0.0:8080
effective-user = zope
event-log-custom =
  <logfile>
    path STDOUT
    level INFO
  </logfile>
access-log-custom =
  <logfile>
    path STDOUT
    format %(message)s
  </logfile>
eggs =
  Plone
  Pillow
  org.bccvl.site
  org.bccvl.testsetup
  celery
  RelStorage
  psycopg2
  Products.PrintingMailHost
  raven
locales = ${buildout:directory}/locales
zodb-cache-size = 30000
zserver-threads = 2

environment-vars =

# Zeo Settings
zeo-address = $(ZEOSERVER)
zeo-client = on
# TODO: we build a shared blob storage for now to use with zeoserver container
# blob-cache or in case of shared it's the actual store
blob-storage = /var/opt/zeoserver/blobstorage
shared-blob = on
# TODO: we probably want non shared blob someday: (use default for blob-storage =...)
#shared-blob = no

zeo-var = ${environment:Z_VAR}
zeo-client-cache = 300MB
zeo-client-blob-cache-size = 300MB
zeo-storage = 1

# Advanced instance options
client-home = ${environment:Z_VAR}
effective-user = zope
import-directory = ${environment:Z_VAR}/import
var = ${environment:Z_VAR}
